<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Editar Trabajadores - Sistema</title>
    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="style.css">
    <script src="config_server.js"></script>
    
    <style>
        

        body {
            overflow-x: hidden;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
        }
        
        .welcome-section {
            background: white;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            padding: 30px;
            margin-bottom: 30px;
            text-align: center;
        }
        
        .table-container {
            background: white;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            padding: 30px;
            margin-bottom: 30px;
        }
        
        .fade-in {
            animation: fadeIn 0.5s ease-in;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .table {
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }
        
        .table thead th {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            font-weight: 600;
            padding: 15px;
        }
        
        .table tbody tr {
            transition: all 0.3s ease;
        }
        
        .table tbody tr:hover {
            background-color: #f8f9fa;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .table tbody td {
            padding: 15px;
            vertical-align: middle;
            border-color: #e9ecef;
        }
        
        .btn-action {
            border-radius: 8px;
            padding: 8px 16px;
            font-weight: 500;
            transition: all 0.3s ease;
            border: none;
            margin: 0 2px;
        }
        
        .btn-edit {
            background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
            color: white;
        }
        
        .btn-edit:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(17, 153, 142, 0.4);
            color: white;
        }
        
        .btn-delete {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            color: white;
        }
        
        .btn-delete:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(245, 87, 108, 0.4);
            color: white;
        }
        
        .page-title {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-weight: bold;
        }
        
        .loading-spinner {
            display: none;
            text-align: center;
            padding: 20px;
        }
        
        .empty-state {
            text-align: center;
            padding: 40px;
            color: #6c757d;
        }
        
        .empty-state i {
            font-size: 3rem;
            margin-bottom: 20px;
            color: #dee2e6;
        }
    </style>
</head>
<body>
    <%- include('partials/navbar') %>

    <!-- Contenido principal -->
    <div class="container-fluid mt-4">
        <!-- Sección de título -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="welcome-section fade-in">
                    <div class="mb-4">
                        <i class="fas fa-edit fa-3x text-primary mb-3"></i>
                    </div>
                    <h1 class="h2 mb-3 page-title">Gestión de Trabajadores</h1>
                    <p class="text-muted mb-0" style="font-size: 18px;">
                        Administra y edita la información de los trabajadores registrados en el sistema.
                    </p>
                </div>
            </div>
        </div>

        <!-- Tabla de trabajadores -->
        <div class="row">
            <div class="col-12">
                <div class="table-container fade-in">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h5 class="mb-0">
                            <i class="fas fa-users text-primary me-2"></i>
                            Trabajadores Registrados
                        </h5>
                        <div class="text-muted">
                            <i class="fas fa-info-circle me-1"></i>
                            <span id="totalTrabajadores">0</span> trabajadores encontrados
                        </div>
                    </div>
                    
                    <div class="loading-spinner" id="loadingSpinner">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Cargando...</span>
                        </div>
                        <p class="mt-2 text-muted">Cargando trabajadores...</p>
                    </div>
                    
                    <div class="table-responsive">
                        <table class="table" id="trabajadoresTable" style="display: none;">
                            <thead>
                                <tr>
                                    <th><i class="fas fa-user me-2"></i>Nombre</th>
                                    <th><i class="fas fa-user me-2"></i>Apellido</th>
                                    <th><i class="fas fa-envelope me-2"></i>Correo</th>
                                    <th><i class="fas fa-cogs me-2"></i>Acciones</th>
                                </tr>
                            </thead>
                            <tbody id="trabajadoresBody">
                                <!-- Los datos de los trabajadores se cargarán aquí -->
                            </tbody>
                        </table>
                    </div>
                    
                    <div class="empty-state" id="emptyState" style="display: none;">
                        <i class="fas fa-users"></i>
                        <h5>No hay trabajadores registrados</h5>
                        <p>Aún no se han registrado trabajadores en el sistema.</p>
                        <a href="registro2.html" class="btn btn-primary">
                            <i class="fas fa-plus me-2"></i>Agregar Primer Trabajador
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        window.addEventListener('load', async () =>{
            try{
                // se obtienen los datos del usuario desde el servidor
                const response = await fetch('/api/perfil');

                if (!response.ok){
                    console.warn('Dev mode: perfil no disponible, se omite redirección al login');
                } else {
                    const usuario = await response.json();
                    if (usuario.nombre && usuario.apellido){
                        document.getElementById('welcomeMessage').innerText = `${usuario.nombre} ${usuario.apellido}`;
                    }
                    verificarAdmin(usuario.rol);
                }
            } catch (error){
                console.error('Error de autenticación: ', error);
                console.warn('Dev mode: se omite redirección al login');
            }
        });

        // PERMISOS
        function verificarAdmin(rol){
            console.log("Rol del usuario: ", rol);

            const dropdowns = {
                registrar: document.getElementById('dropdownRegistrar'),
                editarTrabajador: document.getElementById('dropdownEditarTrabajador'),
                editarCliente: document.getElementById('dropdownEditarCliente'),
                registrarCliente: document.getElementById('dropdownRegistrarCliente')
            };

            Object.values(dropdowns).forEach(dropdown => {
                dropdown.style.display = 'block';
            });

            if (rol === 'Soporte TI' || rol === 'Gerente'){
                Object.values(dropdowns).forEach(dropdown =>{
                    dropdown.style.pointerEvents = 'auto';
                    dropdown.style.color = '';
                    dropdown.style.textDecoration= '';
                });
            } else if(rol === 'Supervisor'){
                Object.values(dropdowns).forEach(dropdown =>{
                    dropdown.style.pointerEvents = 'none';
                    dropdown.style.color = 'Gray';
                    dropdown.style.textDecoration= 'none';
                });
            }
        }

        async function logout() {
            try { await fetch('/logout', { method: 'POST', credentials: 'include' }); } catch (e) {}
            try { sessionStorage.clear(); localStorage.clear(); } catch (e) {}
            try {
                document.cookie.split(';').forEach(c => {
                    const eqPos = c.indexOf('=');
                    const name = (eqPos > -1 ? c.substring(0, eqPos) : c).trim();
                    if (name) document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/';
                });
            } catch (e) {}
            window.location.replace('login.html');
        }
        
        // Carga los trabajadores desde el backend
        async function cargarTrabajadores() {
            const loadingSpinner = document.getElementById('loadingSpinner');
            const trabajadoresTable = document.getElementById('trabajadoresTable');
            const emptyState = document.getElementById('emptyState');
            const totalTrabajadores = document.getElementById('totalTrabajadores');
            
            loadingSpinner.style.display = 'block';
            trabajadoresTable.style.display = 'none';
            emptyState.style.display = 'none';
            
            try {
                const response = await fetch(`${URL_BASE}/get-trabajadores`, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                });
                const data = await response.json();

                loadingSpinner.style.display = 'none';

                if (response.ok && data.trabajadores && data.trabajadores.length > 0) {
                    const trabajadoresBody = document.getElementById('trabajadoresBody');
                    trabajadoresBody.innerHTML = ''; 

                    // Actualizar contador
                    totalTrabajadores.textContent = data.trabajadores.length;

                    // Iterar sobre los datos de los trabajadores y mostrarlos en la tabla
                    data.trabajadores.forEach((trabajador, index) => {
                        const tr = document.createElement('tr');
                        tr.style.animationDelay = `${index * 0.1}s`;
                        tr.classList.add('fade-in');
                        tr.innerHTML = `
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="bg-primary rounded-circle d-flex align-items-center justify-content-center me-3" style="width: 40px; height: 40px;">
                                        <i class="fas fa-user text-white"></i>
                                    </div>
                                    <strong>${trabajador.nombre}</strong>
                                </div>
                            </td>
                            <td>${trabajador.apellido}</td>
                            <td>
                                <i class="fas fa-envelope text-muted me-2"></i>
                                ${trabajador.correo}
                            </td>
                            <td>
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-action btn-edit" onclick="editarTrabajador(${trabajador.id})" title="Editar trabajador">
                                        <i class="fas fa-edit me-1"></i>Editar
                                    </button>
                                    <button type="button" class="btn btn-action btn-delete" onclick="eliminarTrabajador(${trabajador.id})" title="Eliminar trabajador">
                                        <i class="fas fa-trash me-1"></i>Eliminar
                                    </button>
                                </div>
                            </td>
                        `;
                        trabajadoresBody.appendChild(tr);
                    });
                    
                    trabajadoresTable.style.display = 'table';
                } else {
                    totalTrabajadores.textContent = '0';
                    emptyState.style.display = 'block';
                }
            } catch (error) {
                loadingSpinner.style.display = 'none';
                console.error('Error fetching trabajadores:', error);
                alert('Error al obtener los trabajadores. Por favor, intenta nuevamente.');
            }
        }

        // Función para eliminar un trabajador
        async function eliminarTrabajador(id) {
            if (confirm('¿Estás seguro de que deseas eliminar este trabajador? Esta acción no se puede deshacer.')) {
                try {
                    const response = await fetch(`${URL_BASE}/eliminarTrabajador/${id}`, {
                        method: 'DELETE'
                    });

                    if (!response.ok) {
                        throw new Error('Error al eliminar el trabajador');
                    }

                    // Mostrar mensaje de éxito con estilo
                    const alertDiv = document.createElement('div');
                    alertDiv.className = 'alert alert-success alert-dismissible fade show position-fixed';
                    alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
                    alertDiv.innerHTML = `
                        <i class="fas fa-check-circle me-2"></i>
                        Trabajador eliminado con éxito
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    `;
                    document.body.appendChild(alertDiv);
                    
                    // Recargar los trabajadores después de la eliminación
                    setTimeout(() => {
                        cargarTrabajadores();
                    }, 1000);
                    
                } catch (error) {
                    console.error('Error al eliminar el trabajador:', error);
                    alert('Hubo un error al eliminar el trabajador. Por favor, intenta nuevamente.');
                }
            }
        }

        function editarTrabajador(id) {
            window.location.href = `editar2.html?id=${id}`;
        }
        // Inicialización
        document.addEventListener('DOMContentLoaded', () => {
            verificarAdmin();
            cargarTrabajadores();
        });
    </script>
</body>
</html>